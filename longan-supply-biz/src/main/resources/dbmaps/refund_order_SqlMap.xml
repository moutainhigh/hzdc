<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="refund_order">
	<resultMap class="com.longan.biz.dataobject.RefundOrder" id="abatorgenerated_RefundOrderResult">
		<result column="id" jdbcType="BIGINT" property="id" />
		<result column="pay_order_id" jdbcType="BIGINT" property="payOrderId" />
		<result column="biz_id" jdbcType="INTEGER" property="bizId" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="acct_id" jdbcType="BIGINT" property="acctId" />
		<result column="amount" jdbcType="BIGINT" property="amount" />
		<result column="amount_dummy" jdbcType="BIGINT" property="amountDummy" />
		<result column="acct_date" jdbcType="CHAR" property="acctDate" />
		<result column="acct_log_id" jdbcType="BIGINT" property="acctLogId" />
		<result column="gmt_create" jdbcType="DATETIME" property="gmtCreate" />
		<result column="gmt_modify" jdbcType="DATETIME" property="gmtModify" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="pay_type" jdbcType="INTEGER" property="payType" />
		<result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
		<result column="memo" jdbcType="VARCHAR" property="memo" />
		<result column="biz_order_id" jdbcType="BIGINT" property="bizOrderId" />
		<result column="item_id" jdbcType="INTEGER" property="itemId" />
		<result column="supply_item_id" jdbcType="INTEGER" property="supplyItemId" />
		<result column="supply_trader_id" jdbcType="INTEGER" property="supplyTraderId" />
		<result column="oper_id" jdbcType="INTEGER" property="operId" />
		<result column="oper_name" jdbcType="VARCHAR" property="operName" />
	</resultMap>
	<sql id="abatorgenerated_Example_Where_Clause">
		<iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
			<isEqual compareValue="true" property="oredCriteria[].valid">
				(
				<iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
					$oredCriteria[].criteriaWithoutValue[]$
				</iterate>
				<iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
					$oredCriteria[].criteriaWithSingleValue[].condition$
					#oredCriteria[].criteriaWithSingleValue[].value#
				</iterate>
				<iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
					$oredCriteria[].criteriaWithListValue[].condition$
					<iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
						#oredCriteria[].criteriaWithListValue[].values[]#
					</iterate>
				</iterate>
				<iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
					$oredCriteria[].criteriaWithBetweenValue[].condition$
					#oredCriteria[].criteriaWithBetweenValue[].values[0]# and
					#oredCriteria[].criteriaWithBetweenValue[].values[1]#
				</iterate>
				)
			</isEqual>
		</iterate>
	</sql>
	<select id="abatorgenerated_selectByPrimaryKey" parameterClass="com.longan.biz.dataobject.RefundOrder"
		resultMap="abatorgenerated_RefundOrderResult">
		select id, pay_order_id, biz_id, user_id, acct_id, amount,amount_dummy, acct_date, acct_log_id, gmt_create,
		gmt_modify, status, pay_type, error_msg, memo, biz_order_id, item_id, supply_item_id, supply_trader_id, oper_id,
		oper_name from refund_order where id = #id:BIGINT#
	</select>
	<select id="abatorgenerated_selectByExample" parameterClass="com.longan.biz.dataobject.RefundOrderExample"
		resultMap="abatorgenerated_RefundOrderResult">
		select id, pay_order_id, biz_id, user_id, acct_id, amount, amount_dummy,acct_date, acct_log_id, gmt_create,
		gmt_modify, status, pay_type, error_msg, memo, biz_order_id, item_id, supply_item_id, supply_trader_id, oper_id,
		oper_name from refund_order
		<isParameterPresent>
			<include refid="refund_order.abatorgenerated_Example_Where_Clause" />
			<isNotNull property="orderByClause">
				order by $orderByClause$
			</isNotNull>
		</isParameterPresent>
	</select>
	<delete id="abatorgenerated_deleteByPrimaryKey" parameterClass="com.longan.biz.dataobject.RefundOrder">
		delete from refund_order where id = #id:BIGINT#
	</delete>
	<delete id="abatorgenerated_deleteByExample" parameterClass="com.longan.biz.dataobject.RefundOrderExample">
		delete from refund_order
		<include refid="refund_order.abatorgenerated_Example_Where_Clause" />
	</delete>
	<insert id="abatorgenerated_insert" parameterClass="com.longan.biz.dataobject.RefundOrder">
		insert into refund_order (id, pay_order_id, biz_id, user_id, acct_id, amount, amount_dummy,acct_date, acct_log_id,
		gmt_create, gmt_modify, status, pay_type, error_msg, memo, biz_order_id, item_id, supply_item_id, supply_trader_id,
		oper_id, oper_name) values (#id:BIGINT#, #payOrderId:BIGINT#, #bizId:INTEGER#, #userId:BIGINT#, #acctId:BIGINT#,
		#amount:BIGINT#,#amountDummy:BIGINT#, #acctDate:CHAR#, #acctLogId:BIGINT#, now(), now(), #status:INTEGER#,
		#payType:INTEGER#, #errorMsg:VARCHAR#, #memo:VARCHAR#, #bizOrderId:BIGINT#, #itemId:INTEGER#, #supplyItemId:INTEGER#,
		#supplyTraderId:INTEGER#, #operId:INTEGER#, #operName:VARCHAR#)
		<selectKey resultClass="Long" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="abatorgenerated_updateByPrimaryKeySelective" parameterClass="com.longan.biz.dataobject.RefundOrder">
		update refund_order set gmt_create = now()
		<dynamic>
			<isNotNull prepend="," property="payOrderId">
				pay_order_id = #payOrderId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="bizId">
				biz_id = #bizId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="userId">
				user_id = #userId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="acctId">
				acct_id = #acctId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="amount">
				amount = #amount:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="amountDummy">
				amount_dummy = #amountDummy:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="acctDate">
				acct_date = #acctDate:CHAR#
			</isNotNull>
			<isNotNull prepend="," property="acctLogId">
				acct_log_id = #acctLogId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="status">
				status = #status:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="payType">
				pay_type = #payType:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="errorMsg">
				error_msg = #errorMsg:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="memo">
				memo = #memo:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="bizOrderId">
				biz_order_id = #bizOrderId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="itemId">
				item_id = #itemId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="supplyItemId">
				supply_item_id = #supplyItemId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="supplyTraderId">
				supply_trader_id = #supplyTraderId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="operId">
				oper_id = #operId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="operName">
				oper_name = #operName:VARCHAR#
			</isNotNull>
		</dynamic>
		where id = #id:BIGINT#
	</update>
	<select id="abatorgenerated_countByExample" parameterClass="com.longan.biz.dataobject.RefundOrderExample"
		resultClass="java.lang.Integer">
		select count(*) from refund_order
		<include refid="refund_order.abatorgenerated_Example_Where_Clause" />
	</select>
	<update id="abatorgenerated_updateByExampleSelective">
		update refund_order set gmt_create = now()
		<dynamic>
			<isNotNull prepend="," property="record.payOrderId">
				pay_order_id = #record.payOrderId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.bizId">
				biz_id = #record.bizId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.userId">
				user_id = #record.userId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.acctId">
				acct_id = #record.acctId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.amount">
				amount = #record.amount:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.amountDummy">
				amount_dummy = #record.amountDummy:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.acctDate">
				acct_date = #record.acctDate:CHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.acctLogId">
				acct_log_id = #record.acctLogId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.status">
				status = #record.status:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.payType">
				pay_type = #record.payType:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.errorMsg">
				error_msg = #record.errorMsg:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.memo">
				memo = #record.memo:VARCHAR#
			</isNotNull>
			<isNotNull prepend="," property="record.bizOrderId">
				biz_order_id = #record.bizOrderId:BIGINT#
			</isNotNull>
			<isNotNull prepend="," property="record.itemId">
				item_id = #record.itemId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.supplyItemId">
				supply_item_id = #record.supplyItemId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.supplyTraderId">
				supply_trader_id = #record.supplyTraderId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.operId">
				oper_id = #record.operId:INTEGER#
			</isNotNull>
			<isNotNull prepend="," property="record.operName">
				oper_name = #record.operName:VARCHAR#
			</isNotNull>
		</dynamic>
		<isParameterPresent>
			<include refid="refund_order.abatorgenerated_Example_Where_Clause" />
		</isParameterPresent>
	</update>

	<sql id="whereConditions">
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="id">
				id = #id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="status">
				status = #status#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="payType">
				pay_type = #payType#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="bizId">
				biz_id = #bizId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="acctId">
				acct_id = #acctId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="userId">
				user_id = #userId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="payOrderId">
				pay_order_id = #payOrderId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="acctLogId">
				acct_log_id = #acctLogId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="acctDate">
				acct_date = #acctDate#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="supplyTraderId">
				supply_trader_id = #supplyTraderId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="startGmtCreate">
				gmt_create &gt;= #startGmtCreate#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="endGmtCreate">
				gmt_create &lt;= #endGmtCreate#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="operId">
				oper_id = #operId#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="bizOrderId">
				biz_order_id = #bizOrderId#
			</isNotEmpty>
		</dynamic>
	</sql>

	<select id="queryByPage" resultMap="abatorgenerated_RefundOrderResult">
		select id, pay_order_id, biz_id, user_id, acct_id, amount, amount_dummy,acct_date, acct_log_id, gmt_create,
		gmt_modify, status, pay_type, error_msg, memo, biz_order_id, item_id, supply_item_id, supply_trader_id, oper_id,
		oper_name from refund_order INNER JOIN (SELECT id FROM refund_order
		<include refid="refund_order.whereConditions" />
		ORDER BY gmt_create DESC LIMIT #startRow#,#pageSize#) as page using (id)
	</select>
	<select id="queryByPageCount" resultClass="java.lang.Integer">
		SELECT count(*) FROM refund_order
		<include refid="refund_order.whereConditions" />
	</select>

	<select id="queryByExport" resultMap="abatorgenerated_RefundOrderResult">
		select id, pay_order_id, biz_id, user_id, acct_id, amount,amount_dummy, acct_date, acct_log_id, gmt_create,
		gmt_modify, status, pay_type, error_msg, memo, biz_order_id, item_id, supply_item_id, supply_trader_id, oper_id,
		oper_name from refund_order
		<include refid="refund_order.whereConditions" />
		ORDER BY gmt_create DESC
	</select>
	<select id="selectByExport" resultMap="abatorgenerated_RefundOrderResult">
		select id, pay_order_id, biz_id, user_id, acct_id, amount,amount_dummy, acct_date, acct_log_id, gmt_create,
		gmt_modify, status, pay_type, error_msg, memo, biz_order_id, item_id, supply_item_id, supply_trader_id, oper_id,
		oper_name from refund_order
		<include refid="refund_order.whereConditions" />
		ORDER BY gmt_create DESC LIMIT #startRow#,#pageSize#
	</select>
	<select id="countByExport" resultClass="java.lang.Integer">
		select count(*) from refund_order
		<include refid="refund_order.whereConditions" />
	</select>

	<select id="querySumAmount" resultClass="com.longan.biz.sumobject.RefundOrderAmount">
		select sum(amount) refund from refund_order
		<include refid="refund_order.whereConditions" />
	</select>
</sqlMap>